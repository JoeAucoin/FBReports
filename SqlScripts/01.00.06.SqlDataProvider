

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_THH_Served]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_THH_Served]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_THH_Served]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_New_Clients_Report_THH]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_New_Clients_Report_THH]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_New_Clients_Report_THH]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_New_Clients_Report]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_New_Clients_Report]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_New_Clients_Report]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_New_Clients_Age_Groups_Clients]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_New_Clients_Age_Groups_Clients]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_New_Clients_Age_Groups_Clients]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_New_Clients_Age_Groups_AFM]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_New_Clients_Age_Groups_AFM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_New_Clients_Age_Groups_AFM]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_MapClients]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_MapClients]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_MapClients]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_HouseholdTotal_Report]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_HouseholdTotal_Report]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_HouseholdTotal_Report]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Food_Inventory]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_Food_Inventory]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_Food_Inventory]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Distinct_Clients_By_City]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_Distinct_Clients_By_City]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_Distinct_Clients_By_City]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Client_Visit_USDA]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_Client_Visit_USDA]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_Client_Visit_USDA]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Client_Visit_Details]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_Client_Visit_Details]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_Client_Visit_Details]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Age_Groups_Clients]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_Age_Groups_Clients]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_Age_Groups_Clients]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Age_Groups_AFM]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_Age_Groups_AFM]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_Age_Groups_AFM]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_AFM_Age]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReports_AFM_Age]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReports_AFM_Age]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReportEthnicityByTown]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReportEthnicityByTown]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReportEthnicityByTown]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReportAgeByTownGender]    Script Date: 3/6/2024 11:12:28 AM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[GIBS_FBReportAgeByTownGender]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[GIBS_FBReportAgeByTownGender]
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReportAgeByTownGender]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[GIBS_FBReportAgeByTownGender]
(@startdate datetime,@enddate datetime)
as
begin
	declare @contactTable as table(id INT NOT NULL IDENTITY(1, 1),clientid int,dob datetime,gender varchar(20),Town varchar(100),clientType varchar(20))
	insert into @contactTable(clientid,dob,      gender,      town,clientType)
	select					  c.clientid,c.clientdob,
	
	case when len(c.clientgender)=0 then 'NotSelected'
	when c.clientgender is null then 'NotSelected'
	else
	c.clientgender
	end
	
	
	,c.clientcity,'Main' 
	
	from GIBS_FBClients c
	inner join vw_GIBS_FBVisits vi on c.clientid=vi.clientid
	where 1=1
	and (vi.VisitDate BETWEEN CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))  
--	and isdate(cast(clientdob as datetime))=1
	
	insert into @contactTable(clientid,dob,gender,town,clienttype)
	select cl.clientid,ClAddFamMemDOB,
	case when len(clfam.AFMGender)=0 then 'NotSelected'
	when clfam.AFMGender is null then 'NotSelected'
	else
	clfam.AFMGender
	end
	,cl.clientcity,'FamMember' 
	
	from GIBS_FBClientsAddFamMem clfam 
	inner join (select clientid,clientcity from GIBS_FBClients) cl on clfam.clientid=cl.clientid 
	inner join vw_GIBS_FBVisits vi on clfam.clientid=vi.clientid
	where 1=1
	and (vi.VisitDate BETWEEN CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))  
	and isdate(cast(ClAddFamMemDOB as datetime))=1
	
	select * from @contactTable order by clientid
	
	declare @month int,@year int , @now datetime
	set @now=getdate()
	set @month=10
	set @year=datepart(yyyy,getdate())
	declare @resultTable table(gender varchar(20),town varchar(100),age0_5 int,age6_10 int,age11_18 int,age19_64 int,age65 int)
	insert into @resultTable
	select  *  --town,gender,numberof
	from(
		select count(@year-DATEPART(yyyy,DOB)) as numberof
		,gender
		,town
		,bucket =
			   --@year-DATEPART(yyyy,DOB)
			   CASE
				when @year-DATEPART(yyyy,DOB)>=0 and @year-DATEPART(yyyy,DOB)<=5 then '0-5'
				when @year-DATEPART(yyyy,DOB)>=6 and @year-DATEPART(yyyy,DOB)<=10 then '6-10'
				when @year-DATEPART(yyyy,DOB)>=11 and @year-DATEPART(yyyy,DOB)<=18 then '11-18'
				when @year-DATEPART(yyyy,DOB)>=19 and @year-DATEPART(yyyy,DOB)<=64 then '19-64'
				else
				'65+'
			end
	--		,
	--MainCount =	 SUM(CASE WHEN clientType = 'Main' THEN 1 ELSE 0 END)  ,
    -- FamCount =    SUM(CASE WHEN clientType = 'FamMember' THEN 1 ELSE 0 END) 
		from 
			@contactTable c
			where 1=1
			and DOB is not null
			and dob > '01-01-1910' 
			and @year-DATEPART(yyyy,DOB)>0
			--and c.gender<>'n'
			--and c.gender in('male','female')
		group by 
			@year-DATEPART(yyyy,DOB)
			,gender
			,town -- , clientType
		) 
		as ac
		PIVOT
		(
	    sum(ac.numberof)
	    FOR [bucket] IN ([0-5], [6-10], [11-18], [19-64],[65+] )
	)AS pivottbl
	group by town,gender,[0-5], [6-10], [11-18], [19-64],[65+]   --  , MainCount, FamCount
	--order by town,gender
	select town,gender  ,coalesce(age0_5,0) as age0_5  ,coalesce(age6_10,0) as age6_10  ,coalesce(age11_18,0) as age11_18  , 
	coalesce(age19_64,0) as age19_64  ,coalesce(age65,0) as age65
	--, MainCount, FamCount 
	, MainCount = (Select  SUM(CASE WHEN clientType = 'Main' THEN 1 ELSE 0 END)   
		from @contactTable)

, FamCount = (Select 
		SUM(CASE WHEN clientType = 'FamMember' THEN 1 ELSE 0 END) 
		from @contactTable)
		,DOBNull = 0
	from @resultTable
	
end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReportEthnicityByTown]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO





CREATE procedure [dbo].[GIBS_FBReportEthnicityByTown]
(@startdate datetime,
@enddate datetime,
@ServiceLocation varchar(50)
)
as
begin
--declare @startdate datetime,@enddate datetime
--set @startdate='01/01/2015'
--set @enddate=getdate()


Declare  @LOCStartDate datetime,
       @LOCEndDate datetime,
       @LOCServiceLocation varchar(50)

	SET @LOCStartDate = @StartDate
	SET @LOCEndDate = @EndDate
	SET @LOCServiceLocation = @ServiceLocation



	declare @contactTable as table(id INT NOT NULL IDENTITY(1, 1),clientid int,dob datetime,gender varchar(10),Town varchar(100),clientType varchar(20),clientethnicity varchar(200))
	insert into @contactTable(clientid,dob,      gender,      town,clientType,clientethnicity)
	select					  c.clientid,c.clientdob,c.clientgender,c.clientcity,'Main' ,
	case when len(coalesce(clientethnicity,''))=0 then 'NotSelected'
				else clientethnicity 
			end
	
	from GIBS_FBClients c
	inner join vw_GIBS_FBVisits vi on c.clientid=vi.clientid
	where 1=1
	and (vi.VisitDate BETWEEN CONVERT(DATETIME, @LOCStartDate, 102) AND CONVERT(DATETIME, @LOCEndDate, 102))  
	--and  (@LOCServiceLocation is null or vi.ServiceLocation=@LOCServiceLocation)
	--and isdate(cast(clientdob as datetime))=1
	
	insert into @contactTable(clientid,dob,gender,town,clienttype,clientethnicity)
	select cl.clientid,ClAddFamMemDOB,AFMGender,cl.clientcity,'FamMember',
	 
	case when len(coalesce(AFMEthnicity,''))=0 then 'NotSelected'
				else AFMEthnicity 
			end
	from GIBS_FBClientsAddFamMem clfam 
	inner join (select clientid,clientcity from GIBS_FBClients) cl on clfam.clientid=cl.clientid 
	inner join vw_GIBS_FBVisits vi on clfam.clientid=vi.clientid
	where 1=1
	and (vi.VisitDate BETWEEN CONVERT(DATETIME, @LOCStartDate, 102) AND CONVERT(DATETIME, @LOCEndDate, 102))  
	
	
	
	declare @resutTable table( town varchar(50), numberof int,
	[Brazilian] varchar(200), 
	[Hispanic or Latino] varchar(200), 
	[White Non-Hispanic]varchar(200), 
	[Black or African American Non-Hispanic] varchar(200),
	[Native Hawaiian or Pacific Islander Non-Hispanic] varchar(200),
	[Asian Non-Hispanic] varchar(200),
	[American Indian or Alaskan Native Non-Hispanic] varchar(200),
	[Two or More Races (Not Hispanic or Latino)] varchar(200),
	[Other] varchar(200),	
	[NotSelected] varchar(200)
	)
	
	--insert into @resutTable(town,
	
	
	
	select *
	from(
		select 
			town,
			coalesce(count(clientethnicity),0) as numberof,
			clientethnicity
		from 
			@contactTable c
			where 1=1
			--and ltrim(len(clientethnicity))>0
		group by 
			clientethnicity,
			town
		
		) 
		as ac
		PIVOT
		(
			sum(ac.numberof)
			FOR [clientethnicity] IN ([Brazilian] , 
	[Hispanic or Latino], 
	[White Non-Hispanic], 
	[Black or African American Non-Hispanic],
	[Native Hawaiian or Pacific Islander Non-Hispanic],
	[Asian Non-Hispanic],
	[American Indian or Alaskan Native Non-Hispanic],
	[Two or More Races (Not Hispanic or Latino)],
	[Other],	
	[NotSelected])
		)AS pivottbl
	end


GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_AFM_Age]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[GIBS_FBReports_AFM_Age] 
( 
	@StartDate datetime,
	@EndDate datetime, 
	@MinAge int, 
	@MaxAge int, 
	@PortalID int,
    @ServiceLocation varchar(50)
)
AS

 if(@ServiceLocation='0' or @ServiceLocation is null)
begin
set @ServiceLocation=null;
end 
--ADDITIONAL FAMILY MEMBERS
SELECT ClAddFamMemID, GIBS_FBClients.ClientID, 
GIBS_FBClientsAddFamMem.ClAddFamMemFirstName,
GIBS_FBClientsAddFamMem.ClAddFamMemLastName, 
CASE WHEN ClAddFamMemDOB IS NULL THEN '01/01/1901' ELSE ClAddFamMemDOB END AS ClAddFamMemDOB,
cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as INT) AS AFM_Age,
CASE WHEN AFMDOBVerify = 0 THEN 'False' ELSE 'True' END AS ChildVerify,
AFMDOBVerify ,
COALESCE(AFMGender,'') as AFMGender,
ClientFirstName, 
COALESCE(ClientMiddleInitial,'') as ClientMiddleInitial,
ClientLastName,
ClientAddress, 
COALESCE(ClientUnit,'') as ClientUnit,
ClientCity, 
ClientTown, 
ClientState, 
ClientZipCode
-- GIBS_FBClientsVisits.ServiceLocation
from dbo.GIBS_FBClients 
INNER JOIN GIBS_FBClientsAddFamMem 
ON GIBS_FBClients.ClientID = GIBS_FBClientsAddFamMem.ClientID 
-- below replaces the exists statement
inner join (
SELECT distinct clientid From dbo.GIBS_FBClientsVisits
where 1=1 
and (GIBS_FBClientsVisits.VisitDate between CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102)) 
AND GIBS_FBClientsVisits.VisitNumBags > 0
AND (@ServiceLocation is null or ServiceLocation=@ServiceLocation)
) v on v.clientid=GIBS_FBClients.ClientID
WHERE PortalId = @PortalID 
-- replaced by the join above
--AND --4686
-- EXISTS( SELECT null From dbo.GIBS_FBClientsVisits
-- where GIBS_FBClientsVisits.ClientID = GIBS_FBClients.ClientID
-- AND (GIBS_FBClientsVisits.VisitDate between CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102)) 
-- )
--------AND cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as INT) <= 14
AND (cast(dbo.fn_GIBS_FBClients_GetAge(ClAddFamMemDOB,GetDate()) as INT) between @MinAge and @MaxAge )
ORDER BY 
GIBS_FBClients.ClientLastName
--end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Age_Groups_AFM]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[GIBS_FBReports_Age_Groups_AFM] 
( 
	@StartDate datetime,
	@EndDate datetime, 
	@PortalID int,
       @ServiceLocation varchar(50)
)
AS

 
begin 
if(@ServiceLocation='0' or @ServiceLocation is null)
begin
	set @ServiceLocation=null;
end 

--ADDITIONAL FAMILY MEMBERS

	SELECT     
	                              
	count( dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAFM.ClAddFamMemDOB,GetDate())) as AFM_AgeGroupSum,                             
	dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAFM.ClAddFamMemDOB,GetDate()) As AFM_AgeGroup                             
	                    
	FROM         GIBS_FBClients 
			INNER JOIN  GIBS_FBClientsVisits ON GIBS_FBClients.ClientID = GIBS_FBClientsVisits.ClientID 
			INNER JOIN  GIBS_FBClientsAddFamMem AS GIBS_FBClientsAFM ON GIBS_FBClients.ClientID = GIBS_FBClientsAFM.ClientID
		WHERE     (GIBS_FBClientsVisits.VisitDate between  CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))
		AND GIBS_FBClientsVisits.VisitNumBags > 0 
		AND  GIBS_FBClients.PortalID = @PortalID
		and  (@ServiceLocation is null or GIBS_FBClientsVisits.ServiceLocation=@ServiceLocation)

	GROUP BY dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAFM.ClAddFamMemDOB,GetDate())




end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Age_Groups_Clients]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[GIBS_FBReports_Age_Groups_Clients] 
( 
	@StartDate datetime,
	@EndDate datetime,
	@PortalID int
	,    @ServiceLocation varchar(50)
)
AS

 
begin 
if(@ServiceLocation='0' or @ServiceLocation is null)
begin
	set @ServiceLocation=null;
end


--CLIENTS
	SELECT     
	                              
	count( dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClients.ClientDOB,GetDate())) as CLIENT_AgeGroupSum,                             
	dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClients.ClientDOB,GetDate()) As CLIENT_AgeGroup                                      
	                              
	FROM         GIBS_FBClients 
			INNER JOIN GIBS_FBClientsVisits ON GIBS_FBClients.ClientID = GIBS_FBClientsVisits.ClientID 

		WHERE     (GIBS_FBClientsVisits.VisitDate between  CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))
		AND GIBS_FBClientsVisits.VisitNumBags > 0 
		AND GIBS_FBClients.PortalID = @PortalID 
		and  (@ServiceLocation is null or GIBS_FBClientsVisits.ServiceLocation=@ServiceLocation)

	GROUP BY dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClients.ClientDOB,GetDate())





end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Client_Visit_Details]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE  [dbo].[GIBS_FBReports_Client_Visit_Details] 
( 
       -- ADDED @ServiceLocation
       -- Will be sending back either - - -  0 for ALL Records, 1 for just Local records (should be empty string or maybe null), OR 'Chatham COA'
       @StartDate datetime,
       @EndDate datetime,
       @PortalID int,
       @ServiceLocation varchar(50)
)
AS
begin 

Declare  @LOCStartDate datetime,
       @LOCEndDate datetime,
       @LOCPortalID int,
       @LOCServiceLocation varchar(50)
SET @LOCStartDate = @StartDate
SET @LOCEndDate = @EndDate
SET @LOCPortalID = @PortalID
SET @LOCServiceLocation = @ServiceLocation

if(@LOCServiceLocation='0' or @LOCServiceLocation is null)
begin
	set @LOCServiceLocation=null;
end


-- DETAILS

SET NOCOUNT ON

SELECT     GIBS_FBClients.ClientID, 
              GIBS_FBClients.ClientFirstName + ' ' + GIBS_FBClients.ClientLastName AS ClientFullName,
             GIBS_FBClients.ClientCity AS ClientCity, 
              GIBS_FBClients.ClientTown AS ClientTown,
       GIBS_FBClients.ClientZipCode, 
        GIBS_FBClientsVisits.VisitDate, 
        GIBS_FBClientsVisits.VisitNumBags,
GIBS_FBClientsVisits.ServiceLocation
,
  [CLIENT_AgeGroup] ,  [ClientAdult] ,[Client65Plus],
[ClientChild], [ClientNoDOB], [AFM_Adults], [AFM_65Plus], [AFM_Children], [AFM_NoDOB], [HouseholdTotal]
  
       FROM         GIBS_FBClients  
	   RIGHT OUTER  JOIN   GIBS_FBClientsVisits ON GIBS_FBClients.ClientID = GIBS_FBClientsVisits.ClientID

		INNER JOIN [dbo].[vw_GIBS_FBClients] ON GIBS_FBClients.ClientID = vw_GIBS_FBClients.ClientID

              WHERE     (GIBS_FBClientsVisits.VisitDate between  CONVERT(DATETIME, @LOCStartDate, 102) AND CONVERT(DATETIME, @LOCEndDate, 102))

              AND GIBS_FBClientsVisits.VisitNumBags > 0 

              AND GIBS_FBClients.PortalID = @LOCPortalID 

            --  AND GIBS_FBClientsVisits.ServiceLocation = @ServiceLocation
			and  (@LOCServiceLocation is null or GIBS_FBClientsVisits.ServiceLocation=@LOCServiceLocation)
		

       ORDER BY GIBS_FBClients.ClientCity, GIBS_FBClients.ClientTown, GIBS_FBClients.ClientLastName


 

 

end

 


GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Client_Visit_USDA]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[GIBS_FBReports_Client_Visit_USDA] 
( 
       -- ADDED @ServiceLocation
       -- Will be sending back either - - -  0 for ALL Records, 1 for just Local records (should be empty string or maybe null), OR 'Chatham COA'
       @StartDate datetime,
       @EndDate datetime,
       @PortalID int,
       @ServiceLocation varchar(50)
)
AS
begin 

Declare  @LOCStartDate date,
       @LOCEndDate date,
       @LOCPortalID int,
       @LOCServiceLocation varchar(50)
SET @LOCStartDate = @StartDate
SET @LOCEndDate = @EndDate
SET @LOCPortalID = @PortalID
SET @LOCServiceLocation = @ServiceLocation

if(@LOCServiceLocation='0' or @LOCServiceLocation is null)
begin
	set @LOCServiceLocation=null;
end


-- DETAILS

SET NOCOUNT ON

SELECT     GIBS_FBClients.ClientID, 
              GIBS_FBClients.ClientFirstName + ' ' + GIBS_FBClients.ClientLastName AS ClientFullName,
             GIBS_FBClients.ClientCity AS ClientCity, 
              GIBS_FBClients.ClientTown AS ClientTown,
       GIBS_FBClients.ClientZipCode, 
        GIBS_FBClientsVisits.VisitDate, 
        GIBS_FBClientsVisits.VisitNumBags,
GIBS_FBClientsVisits.ServiceLocation
,
GIBS_FBClientsVisits.ClientSignature AS ClientSignature1 ,


COALESCE(GIBS_FBClientsVisits.ClientSignature, CAST(0x89504E470D0A1A0A0000000D49484452000001F4000000640802000000FFA5552A0000001974455874536F6674776172650041646F626520496D616765526561647971C9653C0000032669545874584D4C3A636F6D2E61646F62652E786D7000000000003C3F787061636B657420626567696E3D22EFBBBF222069643D2257354D304D7043656869487A7265537A4E54637A6B633964223F3E203C783A786D706D65746120786D6C6E733A783D2261646F62653A6E733A6D6574612F2220783A786D70746B3D2241646F626520584D5020436F726520392E312D633030312037392E6138643437353334392C20323032332F30332F32332D31333A30353A34352020202020202020223E203C7264663A52444620786D6C6E733A7264663D22687474703A2F2F7777772E77332E6F72672F313939392F30322F32322D7264662D73796E7461782D6E7323223E203C7264663A4465736372697074696F6E207264663A61626F75743D222220786D6C6E733A786D703D22687474703A2F2F6E732E61646F62652E636F6D2F7861702F312E302F2220786D6C6E733A786D704D4D3D22687474703A2F2F6E732E61646F62652E636F6D2F7861702F312E302F6D6D2F2220786D6C6E733A73745265663D22687474703A2F2F6E732E61646F62652E636F6D2F7861702F312E302F73547970652F5265736F75726365526566232220786D703A43726561746F72546F6F6C3D2241646F62652050686F746F73686F702032342E36202857696E646F7773292220786D704D4D3A496E7374616E636549443D22786D702E6969643A46323834353346363236334531314545393033354236303533353741373533422220786D704D4D3A446F63756D656E7449443D22786D702E6469643A4632383435334637323633453131454539303335423630353335374137353342223E203C786D704D4D3A4465726976656446726F6D2073745265663A696E7374616E636549443D22786D702E6969643A4632383435334634323633453131454539303335423630353335374137353342222073745265663A646F63756D656E7449443D22786D702E6469643A4632383435334635323633453131454539303335423630353335374137353342222F3E203C2F7264663A4465736372697074696F6E3E203C2F7264663A5244463E203C2F783A786D706D6574613E203C3F787061636B657420656E643D2272223F3EE0F56ECD00000A674944415478DAECDD5F4853FF1FC7F1E634B552ABF92F75B37FD24DDD68495E94054175936B83916110DE85515148C3A89B742549FFAE02E946B28248B12BAFA40C891294A08B34A4E69F54FC3B338DB9CDDFF9B6DF6F3FBFEE38F7E76CEE6CCFC785E8D9DCCE763EBCF63EEFF3D9398AC5C5C5750080C812C35B0000843B008070070010EE0000C21D0040B80340D488E52DC0DAB2D96C66B3B9BBBBFBFDFBF7137F29954A8542E19AA4EBFA7DD942E1A7FB9F4BEF237A37EF1FCAF9A74AA5CACDCD3D70E0407E7E7E767636DB0B843BB08AC9C9C9FAFAFA5BB76E59AD5659AC706161614D4DCDB163C7D876087F0ABEC484D073381C4F9E3CA9A8A890E3CA3735359D3E7D9A8D883047CF1DA136363696939323D364177477777BBE83CD6613764A7EFDFAC5B606E18E68F1EDDBB7F4F4F4E1E16199AEBFF0B1545555E5E10EF5F5F58989892A952A393959ABD58E8F8FB3D1B12668CB2074CC66F3F6EDDBE5BBFE3B76ECE8E9E9898B8B5BE90EA5A5A52F5FBE5CB67070709023B120DC11B1E6E7E7376CD820DFF557ABD57D7D7D1E925DAFD737353589DE343232929191C1184028315B0621525858E8E1D653A74E959797E7E5E5A5A4A4ACFBDF7C442787C3E12A41944AA56BB9B0D06EB73B27353A674FBA960BFFF2DFE245A1888989F1EFA1845F6C36DBF0F0704747C7CCCC8CD168F45CB3AF94EC82CCCCCC8181819C9C1C8601A8DC1151DADBDB8B8B8B456F2A2A2A6A6E6E967561EBA1665FCA6C366B341A060308774408A15E8E8F8F17AA60F79B2E5FBEFCF0E14359BF3AAD56DBD2D2E2E59DFBFBFBD56A35430221C06C19045D6767A768B29F397346EEC96E3018BC4F768150B98F8E8E322440E58E4870EEDCB967CF9E2D5B989090F0FBF7EFA50D713926FBAB57AFFCF8C7B1B1B1D4D45406060877C898C3E1888B8B731DE174696B6B3B7AF4681426BB202929697A7A5AD61F6C20DC11ED262626DCAB54854261B55A6363E53A59CBA73EBBA8BEBEBE9D3B77323C103CD40E08AE9F3F7FBA2F2C2E2E966FB2EBF5FA00935D2054EE8C0D10EE9031D153ACECDFBF5FA62FC760307833EB7155B9B9B98C0D10EE9031F76EFBBABF4753659AEC7EF7D9972A282850A9548C0D0415DF504590CB07B1C3860B0B0BB27B2181F7D99D140A457B7B3B030354EE90B7F5EBD747C0ABD0E9749224BB52A9B4582CB23EC70E08772042180C86E6E666497662A6A6A6929292784B41B8036BECECD9B392F4D9859A7D7A7A9A6447C8D0730756545252F2E6CD9BC01F47A1504C4E4E92ECA07247E490CBC5AFDDE9743A4992DD59B3272727331840E58EC8213A1532FC49D56717929D3E3BA8DC1189234C86675091AACFCE115450B983CADD93818181E7CF9FF7F4F46CDBB6ADBCBC7CD7AE5DC15B612FAFBCE10D921D843B2256E0F3DC9B9B9B753A9DEB4F93C974F7EEDDEBD7AF07636DA53A82AA542A272727E9B3632D779A790B10DC1116585BA6B1B17169B23B198DC66BD7AE49BEAA0683816407E10E049D90EC656565A237DDBF7FFFC68D1B123E9784F3D9A7A6A64876AC39DA32905FB23B994C26E1674D4D4DE0CF25EC1C483237661D7D7650B9234A885E3D35F06477E57BE0F5BB54C9CE775041B883709720D95DF97EF5EA55BF574FAFD74B389F3D2525852D0EC21DD131C27C3CA0EA53B23B3D78F0C06834FAB16EA5A5A592CC7A741E41A5664758A1E78EE0F2699E7B575797AFC9EE545B5B1B171777FBF66D9F6A76E6B383CA1DF0BFAAF52970FD7EA2EAEA6AEFFBEF5AAD56AA9A9D6407E18E682414D45EDED366B3FDF8F12390E732994C57AE5C59F56E068341AA2B6F08C9BE79F366B632087760E5B128C559681E3D7AE4B9FF2ED57550A9D941B803DE86BBFB9751FD505B5BBB527F46AA64572814243B087744359F0EA836343448F2A42693E9E6CD9BCB166AB55AA96A76E6C6807047B4F3699EFBC68D1BCD66B324CF5B5D5D5D5959E9FA53AFD74BD267779EC5973E3B0877C0371A8DA6BFBF5F9287AAFB4BF874292B2B636E0C0877404A7E9CCF5DAD560F0F0F4BF2EC42F19E9C9CDCD8D82849CDCED5F240B803FFCF443FFE2B3333736464449215989F9F0FFC419C57B8DEB469131B14843BF00FBF2FD691919121557F26404AA5D262B178386F4C5D5DDDC99327BBBABAD8DC081F9C7E00E14BAD569BCDE6DCDCDCB5DDF3F0DC67371A8DB5B5B5C22FADADAD7373738989896C3850B903ABD068344343436B58B37B3E8B6F6565A533D99D666767D96420DC01AF64656549757CD527CE3EBBE79ABDAEAEEE5F3BC2B1EC0A83704774B05AAD813F4866666688FBEFCE9ADDC3DC983B77EE2CADD99D02BF1A3840B8431EFC980A29CAD97F0F59B27BBE0EEAE2E26255559568B1CF1607E18EE8186131928D318D46333838188215F6E69B4A4C7807E10E2A77C96467674B35FF7D25DE24BB50A1D35E07E18EA826791B3A78F3DF9DF3D9BD2CC9452F42E2DFD5C001C21D321C6131D28FB160F4DF9DE77AF4BED942B8837007A4A7D168060606244C76CF4750DD89B69B82F1490610EE882E39393952F5DFFD38D7A3688E4B7B800120DC11BE82DAA9C8C8C80870FECCAADF415D89DD6E775FE8FD056301C21D84BB27D9D9D97E1F5F7576633C9C11CCD770176DC403843B22718405BF0DAD56ABFDE8BF73B53C10EE80FF42D386F6A3FFEEEB1154807007FE552087E689BCEFBF4B72B53CD1D7C5015510EE8816A13CC6E84DFFDD99EC815FE15A34DC25394B1A40B803CBA9D56A0FF91EEC2B5C73E23010EE8816A29D8AA0F66A847C1F1D1D154D5EFF663DBAB3DBEDA239BEB8B8C81607E18EE8F5E7CF9FA03E7E7A7AFAD8D8587E7EBE6B494949C9CCCC8C5457B816425CD803705F1E1F1FCFC64598E0CC76082ED13CFDF0E143B09F373535B5B3B3736868C862B16465656DDDBA55C207B75AADEE9F4FC2EE08175005E18E68919696261AEEB3B3B352D5D12BEE96C6C4A8FF92FC91BF7EFDEABE302F2F8F73CB207C3016115C2A954AB49E6D686890EF8BBA70E182FBC29292123637087744CD088B89B974E992FBF28A8A8A6077DE8344D8EDF8F4E993FB729D4EC7E646F850707C1FC1D6DBDBBB67CF1EF7E57BF7EEFDFCF9B3BC5A19131313A9A9A9A23759AD564E1C062A774491BCBCBC2D5BB6B82FFFF2E5CBA1438764F4C51FB3D9BC52B2D7D4D490ECA07247D4E9EAEA2A282810BD293E3EBEADADEDE0C183E15CC20B9F402F5EBC387FFEFC4A77989F9F4F48486043837047D4D16AB52D2D2D2BDD9A9E9E7EF1E2C5A2A2A2B4B4B4858505573B5E48FCA557611542D6E170080B859FC272D7E781CD6613FE4BA954DAEDF6D8D85857112DDCCDB567E0EB4309BF0B0F353C3C2C7CF63C7EFCD8C34B6B6D6D3D7EFC389B18843BA291109A494949323D88EA417979F9D3A74FD9BE20DC11BD2C164BE067EC0A2B870F1F7EF7EE1D5B16618803AA089D949494F1F1F18839BB964EA77BFBF62D9B15843BF0CF779A6667674F9C3821F71772EFDEBDD7AF5F731A48842DDA32581B2D2D2D7ABD5EF44AA461AEA8A8A8A1A161F7EEDD6C4450B903CB959494CCCDCD3537371F3972442EEB5C5A5AFAF1E3C78E8E0E921D54EEC0EAA6A6A67A7B7BBF7FFF6E369BC7C7C7437665BE55093B16397FEDDBB74FAD5673D24710EE0080B5445B060008770000E10E0020DC0100843B0080700700C21D0040B8030008770000E10E0020DC018070E72D0000C21D002003FF11600047391E507CEDDD180000000049454E44AE426082 as varbinary(max))) AS ClientSignature


-- ,  [CLIENT_AgeGroup] ,  [ClientAdult] ,[Client65Plus],
--[ClientChild], [ClientNoDOB], [AFM_Adults], [AFM_65Plus], [AFM_Children], [AFM_NoDOB], [HouseholdTotal]
  
       FROM         GIBS_FBClients  
	   RIGHT OUTER  JOIN   GIBS_FBClientsVisits ON GIBS_FBClients.ClientID = GIBS_FBClientsVisits.ClientID

	--	INNER JOIN [dbo].[vw_GIBS_FBClients] ON GIBS_FBClients.ClientID = vw_GIBS_FBClients.ClientID

              WHERE     (GIBS_FBClientsVisits.VisitDate between  CONVERT(DATETIME, @LOCStartDate, 102) AND CONVERT(DATETIME, @LOCEndDate, 102))

              AND GIBS_FBClientsVisits.VisitNumBags > 0 

              AND GIBS_FBClients.PortalID = @LOCPortalID 

            --  AND GIBS_FBClientsVisits.ServiceLocation = @ServiceLocation
			and  (@LOCServiceLocation is null or GIBS_FBClientsVisits.ServiceLocation=@LOCServiceLocation)
		

       ORDER BY GIBS_FBClients.ClientCity, GIBS_FBClients.ClientTown, GIBS_FBClients.ClientLastName


 

 

end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Distinct_Clients_By_City]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE  [dbo].[GIBS_FBReports_Distinct_Clients_By_City] 
( 
	@StartDate datetime,
	@EndDate datetime,
	@PortalID int,
    @ServiceLocation varchar(50)
)
AS

 --CreatedOnDate
begin 

Declare  @LOCStartDate datetime,
       @LOCEndDate datetime,
       @LOCPortalID int,
       @LOCServiceLocation varchar(50)

SET @LOCStartDate = @StartDate
SET @LOCEndDate = @EndDate
SET @LOCPortalID = @PortalID
SET @LOCServiceLocation = @ServiceLocation

if(@LOCServiceLocation='0' or @LOCServiceLocation is null)
begin
	set @LOCServiceLocation=null;
end 

-- DETAILS

SELECT DISTINCT 
                      GIBS_FBClients.ClientID, GIBS_FBClients.ClientFirstName + ' ' + GIBS_FBClients.ClientLastName AS ClientFullName, GIBS_FBClients.ClientLastName, 
					  GIBS_FBClients.CreatedOnDate, coalesce(GIBS_FBClients.Latitude, 0) AS Latitude, coalesce(GIBS_FBClients.Longitude, 0) AS Longitude, 
                      UPPER(GIBS_FBClients.ClientCity) AS ClientCity, UPPER(GIBS_FBClients.ClientTown) AS ClientTown, GIBS_FBClients.ClientZipCode, 
                      vw_GIBS_FBClients.CLIENT_AgeGroup, vw_GIBS_FBClients.ClientAdult, vw_GIBS_FBClients.Client65Plus, vw_GIBS_FBClients.ClientChild, 
                      vw_GIBS_FBClients.ClientNoDOB, vw_GIBS_FBClients.AFM_Adults, vw_GIBS_FBClients.AFM_65Plus, vw_GIBS_FBClients.AFM_Children, 
                      vw_GIBS_FBClients.AFM_NoDOB, vw_GIBS_FBClients.HouseholdTotal
FROM         GIBS_FBClients 

INNER JOIN vw_GIBS_FBClients ON GIBS_FBClients.ClientID = vw_GIBS_FBClients.ClientID 

LEFT OUTER JOIN   GIBS_FBClientsVisits ON GIBS_FBClients.ClientID = GIBS_FBClientsVisits.ClientID
WHERE     (GIBS_FBClientsVisits.VisitDate BETWEEN CONVERT(DATETIME, @LOCStartDate, 102) AND CONVERT(DATETIME, @LOCEndDate, 102)) AND 
                      (GIBS_FBClients.PortalID = @LOCPortalID)
					  AND GIBS_FBClientsVisits.VisitNumBags > 0
					  and  (@LOCServiceLocation is null or GIBS_FBClientsVisits.ServiceLocation=@LOCServiceLocation)
ORDER BY ClientCity, ClientTown, GIBS_FBClients.ClientLastName


end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_Food_Inventory]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[GIBS_FBReports_Food_Inventory] 
( 
	@StartDate datetime,
	@EndDate datetime,
	@PortalID int
)
AS

 
begin 

-- DETAILS


--		WHERE     (GIBS_FBClientsVisits.VisitDate between  CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))
SELECT     
GIBS_FBLineItems.LineItemID,
Convert(DateTime, Convert(CHAR(12), GIBS_FBInvoices.InvoiceDate, 12)) AS InvoiceDate
, GIBS_FBSuppliers.SupplierName, GIBS_FBProductCategory.ProductCategory, 
GIBS_FBProducts.ProductName, 
GIBS_FBLineItems.Cases, 
GIBS_FBLineItems.CountPerCase, 
                      GIBS_FBLineItems.PricePerCase, 
                      coalesce(GIBS_FBLineItems.WeightPerCase, 0) AS WeightPerCase,
                      coalesce(GIBS_FBLineItems.WeightPerCase, 0) * GIBS_FBLineItems.Cases AS TotalProductWeight, 
                      GIBS_FBLineItems.PricePerCase * GIBS_FBLineItems.Cases AS TotalProductCost,
					  GIBS_FBInvoices.Organization, GIBS_FBLineItems.ReportType
FROM         GIBS_FBInvoices INNER JOIN
                      GIBS_FBSuppliers ON GIBS_FBInvoices.SupplierID = GIBS_FBSuppliers.SupplierID INNER JOIN
                      GIBS_FBProductCategory INNER JOIN
                      GIBS_FBProducts INNER JOIN
                      GIBS_FBLineItems ON GIBS_FBProducts.ProductID = GIBS_FBLineItems.ProductID ON 
                      GIBS_FBProductCategory.ProductCategoryID = GIBS_FBProducts.ProductCategoryID ON GIBS_FBInvoices.InvoiceID = GIBS_FBLineItems.InvoiceID
WHERE     (GIBS_FBInvoices.InvoiceDate BETWEEN CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))
			AND GIBS_FBInvoices.PortalID = @PortalID

ORDER BY GIBS_FBSuppliers.SupplierName, GIBS_FBProductCategory.ProductCategory		



end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_HouseholdTotal_Report]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE  [dbo].[GIBS_FBReports_HouseholdTotal_Report] 
( 
	@StartDate datetime,
	@EndDate datetime,
	@NumberInFamily int,
	@PortalID int
	--,@ServiceLocation varchar(50)
)
AS

 
begin 


Declare  @LOCStartDate datetime,
       @LOCEndDate datetime,
       @LOCPortalID int,
       @LOCNumberInFamily int,
	   @LOCServiceLocation varchar(50)

SET @LOCStartDate = @StartDate
SET @LOCEndDate = @EndDate
SET @LOCPortalID = @PortalID
SET @LOCNumberInFamily = @NumberInFamily

SET @LOCServiceLocation = '0'

if(@LOCServiceLocation='0' or @LOCServiceLocation is null)
begin
	set @LOCServiceLocation=null;
end

-- DETAILS

SELECT     GIBS_FBClients.ClientID, 
		GIBS_FBClients.ClientLastName + ', ' + GIBS_FBClients.ClientFirstName + ' ' + COALESCE(GIBS_FBClients.ClientMiddleInitial,'')  AS ClientFullName,
		
		UPPER(GIBS_FBClients.ClientCity) AS ClientCity, 
		UPPER(GIBS_FBClients.ClientTown) AS ClientTown,

	GIBS_FBClients.ClientZipCode, 
	 
	 
	 
	CONVERT(varchar,GIBS_FBClients.CreatedOnDate,101) as CreatedOnDate, 
	 
	 cast(dbo.fn_GIBS_FBClients_GetAge(GIBS_FBClients.ClientDOB,GetDate()) as INT) AS ClientAge,
	 
	 
	 
	 cast((SELECT     
			 count(dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate())) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID
			AND dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate()) = 'Adult'
			) as INT) As AFM_Adults,
			
cast((SELECT     
			 count(dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate())) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID
			AND dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate()) = '65 Plus'
			) as INT) As AFM_65Plus,		

cast((SELECT     
			 count(dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate())) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID
			AND dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate()) = 'Children'
			) as INT) As AFM_Children,		
						
			
cast((SELECT     
			 count(dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate())) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID
			AND dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate()) = 'No DOB'
			) as INT) As AFM_NoDOB,
	 
 		cast((SELECT     
			 count(ClAddFamMemID) as FamilyTotal
			From GIBS_FBClientsAddFamMem 
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID) as INT) + 1 As HouseholdTotal
	 
	FROM         GIBS_FBClients 
	

	WHERE     
	
		
		(GIBS_FBClients.PortalID = @LOCPortalID)

AND

((cast((SELECT     
			 count(ClAddFamMemID) as FamilyTotal
			From GIBS_FBClientsAddFamMem 
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID) as INT) + 1) >= @LOCNumberInFamily)

AND 

	EXISTS( SELECT     
			 null 
			From dbo.GIBS_FBClientsVisits
			where  GIBS_FBClientsVisits.ClientID = GIBS_FBClients.ClientID
			AND (GIBS_FBClientsVisits.VisitDate between  CONVERT(DATETIME, @LOCStartDate, 102) AND CONVERT(DATETIME, @LOCEndDate, 102))	
			and  (@LOCServiceLocation is null or GIBS_FBClientsVisits.ServiceLocation=@LOCServiceLocation)
			)


	ORDER BY 
	GIBS_FBClients.ClientLastName
	--,GIBS_FBClients.ClientCity
	--,GIBS_FBClients.ClientTown 



end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_MapClients]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE  [dbo].[GIBS_FBReports_MapClients] 
( 
	@StartDate datetime,
	@EndDate datetime
)
AS

SELECT    TOP 30    GIBS_FBClients.ClientID, GIBS_FBClients.ClientFirstName, GIBS_FBClients.ClientLastName, GIBS_FBClients.ClientCity, GIBS_FBClients.ClientTown, 
coalesce(GIBS_FBClients.Latitude, 0) AS Latitude, coalesce(GIBS_FBClients.Longitude, 0) AS Longitude

--, vw_GIBS_FBVisits.visitdate
FROM            GIBS_FBClients 

LEFT OUTER JOIN vw_GIBS_FBVisits ON GIBS_FBClients.ClientID = vw_GIBS_FBVisits.clientid 


WHERE  

1=1
--  (vw_GIBS_FBVisits.VisitDate BETWEEN CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102)) 

AND (Latitude > 0)

 order by ClientID

GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_New_Clients_Age_Groups_AFM]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[GIBS_FBReports_New_Clients_Age_Groups_AFM] 
( 
	@StartDate datetime,
	@EndDate datetime, 
	@PortalID int,
    @ServiceLocation varchar(50)
)
AS

 
begin 
if(@ServiceLocation='0' or @ServiceLocation is null)
begin
	set @ServiceLocation=null;
end 

--ADDITIONAL FAMILY MEMBERS

	SELECT     
	                              
	count( dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAFM.ClAddFamMemDOB,GetDate())) as AFM_AgeGroupSum,                             
	dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAFM.ClAddFamMemDOB,GetDate()) As AFM_AgeGroup                             
	                    
	FROM         GIBS_FBClients 
			INNER JOIN  GIBS_FBClientsVisits ON GIBS_FBClients.ClientID = GIBS_FBClientsVisits.ClientID 
			INNER JOIN  GIBS_FBClientsAddFamMem AS GIBS_FBClientsAFM ON GIBS_FBClients.ClientID = GIBS_FBClientsAFM.ClientID
		
	WHERE     (GIBS_FBClients.CreatedOnDate between  CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))
		AND (GIBS_FBClientsVisits.VisitDate between  CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))
		AND  GIBS_FBClients.PortalID = @PortalID
		and  (@ServiceLocation is null or GIBS_FBClientsVisits.ServiceLocation=@ServiceLocation)

	GROUP BY dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAFM.ClAddFamMemDOB,GetDate())




end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_New_Clients_Age_Groups_Clients]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[GIBS_FBReports_New_Clients_Age_Groups_Clients] 
( 
	@StartDate datetime,
	@EndDate datetime,
	@PortalID int,
    @ServiceLocation varchar(50)
)
AS

 
begin 
if(@ServiceLocation='0' or @ServiceLocation is null)
begin
	set @ServiceLocation=null;
end  


--CLIENTS
	SELECT     
	                              
	count( dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClients.ClientDOB,GetDate())) as CLIENT_AgeGroupSum,                             
	dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClients.ClientDOB,GetDate()) As CLIENT_AgeGroup                                      
	                              
	FROM         GIBS_FBClients 
		INNER JOIN GIBS_FBClientsVisits ON GIBS_FBClients.ClientID = GIBS_FBClientsVisits.ClientID 

	
		
		WHERE     (GIBS_FBClients.CreatedOnDate between  CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))
		
		AND  (GIBS_FBClientsVisits.VisitDate between  CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))
		AND GIBS_FBClients.PortalID = @PortalID
		and  (@ServiceLocation is null or GIBS_FBClientsVisits.ServiceLocation=@ServiceLocation)
	GROUP BY dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClients.ClientDOB,GetDate())





end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_New_Clients_Report]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[GIBS_FBReports_New_Clients_Report] 
( 
	@StartDate datetime,
	@EndDate datetime,
	@PortalID int,
    @ServiceLocation varchar(50)
)
AS

 
begin

Declare  @LOCStartDate datetime,
       @LOCEndDate datetime,
       @LOCPortalID int,
       @LOCServiceLocation varchar(50)

SET @LOCStartDate = @StartDate
SET @LOCEndDate = @EndDate
SET @LOCPortalID = @PortalID
SET @LOCServiceLocation = @ServiceLocation

if(@LOCServiceLocation='0' or @LOCServiceLocation is null)
begin
	set @LOCServiceLocation=null;
end
-- DETAILS

SELECT  
		GIBS_FBClients.ClientID, 
		GIBS_FBClients.ClientFirstName + ' ' + GIBS_FBClients.ClientLastName AS ClientFullName,
		UPPER(GIBS_FBClients.ClientCity) AS ClientCity, 
		UPPER(GIBS_FBClients.ClientTown) AS ClientTown,
		GIBS_FBClients.ClientZipCode, 
		GIBS_FBClients.CreatedOnDate,
		CONVERT(varchar,GIBS_FBClients.CreatedOnDate,101) as CreatedOnDate, 
		cast(dbo.fn_GIBS_FBClients_GetAge(GIBS_FBClients.ClientDOB,GetDate()) as INT) AS ClientAge,
		ClientAdult =(
				CASE dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClients.ClientDOB,GetDate()) 
				WHEN 'Adult' THEN 1 
				ELSE 0 
				END),
		Client65Plus =(
				CASE dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClients.ClientDOB,GetDate()) 
				WHEN '65 Plus' THEN 1 
				ELSE 0 
				END),
		ClientChild =(
				CASE dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClients.ClientDOB,GetDate()) 
				WHEN 'Children' THEN 1 
				ELSE 0 
				END),
		ClientNoDOB =(
				CASE dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClients.ClientDOB,GetDate()) 
				WHEN 'No DOB' THEN 1 
				ELSE 0 
				END),	 
		 cast((SELECT     
			 count(dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate())) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID
			AND dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate()) = 'Adult'
			) as INT) As AFM_Adults,
			
cast((SELECT     
			 count(dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate())) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID
			AND dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate()) = '65 Plus'
			) as INT) As AFM_65Plus,		

cast((SELECT     
			 count(dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate())) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID
			AND dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate()) = 'Children'
			) as INT) As AFM_Children,		
						
			
cast((SELECT     
			 count(dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate())) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID
			AND dbo.fn_GIBS_FBClients_GetAgeGroup(GIBS_FBClientsAddFamMem.ClAddFamMemDOB,GetDate()) = 'No DOB'
			) as INT) As AFM_NoDOB,
	 
 		cast((SELECT     
			 count(ClAddFamMemID) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID) as INT) + 1 As HouseholdTotal
	 
	FROM         GIBS_FBClients 
	inner join (
				select clientid,max(visitdate) as visitdate,servicelocation from GIBS_FBClientsVisits visit group by clientid,servicelocation
			) 
			v on GIBS_FBClients.clientid = v.clientid

	WHERE     (GIBS_FBClients.CreatedOnDate between  CONVERT(DATETIME, @LOCStartDate, 102) AND CONVERT(DATETIME, @LOCEndDate, 102))	
	
	AND (GIBS_FBClients.PortalID = @LOCPortalID)
	and  (@LOCServiceLocation is null or v.ServiceLocation=@LOCServiceLocation)

	ORDER BY GIBS_FBClients.ClientCity, GIBS_FBClients.ClientTown, GIBS_FBClients.ClientLastName

end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_New_Clients_Report_THH]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[GIBS_FBReports_New_Clients_Report_THH] 
( 
	@StartDate datetime,
	@EndDate datetime,
	@PortalID int,
	@ServiceLocation varchar(50)
)
AS

 
 
begin 
if(@ServiceLocation='0' or @ServiceLocation is null)
begin
	set @ServiceLocation=null;
end 

 	CREATE TABLE #reportTable (
		Id int IDENTITY PRIMARY KEY
		,cCount int
		 ) 
	insert into #reportTable(
		cCount
		 )


	SELECT     

 		convert( int, (SELECT     
			 count(ClAddFamMemID) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID) ) + 1 as TotalHH
	 
	FROM         GIBS_FBClients INNER JOIN
						  GIBS_FBClientsVisits ON GIBS_FBClients.ClientID = GIBS_FBClientsVisits.ClientID
	WHERE   (GIBS_FBClients.CreatedOnDate between  CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))	
	--AND  (GIBS_FBClientsVisits.VisitDate between  CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))
	AND GIBS_FBClients.PortalID = @PortalID

	and  (@ServiceLocation is null or GIBS_FBClientsVisits.ServiceLocation=@ServiceLocation)

	Select sum(cCount) AS THH_Served from #reportTable


end
GO

/****** Object:  StoredProcedure [dbo].[GIBS_FBReports_THH_Served]    Script Date: 3/6/2024 11:12:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE  [dbo].[GIBS_FBReports_THH_Served] 
( 
	@StartDate datetime,
	@EndDate datetime,
	@PortalID int,
    @ServiceLocation varchar(50)
)
AS

--Declare @ReportDate DATETIME 

--set @ReportDate = '2013-01-08 00:00:00'

 
begin 
if(@ServiceLocation='0' or @ServiceLocation is null)
begin
	set @ServiceLocation=null;
end 

 	CREATE TABLE #reportTable (
		Id int IDENTITY PRIMARY KEY
		,cCount int
		 ) 
	insert into #reportTable(
		cCount
		 )


	SELECT     

 		convert( int, (SELECT     
			 count(ClAddFamMemID) 
			From GIBS_FBClientsAddFamMem
			where  GIBS_FBClientsAddFamMem.ClientID = GIBS_FBClients.ClientID) ) + 1 as TotalHH
	 
	FROM         GIBS_FBClients INNER JOIN
						  GIBS_FBClientsVisits ON GIBS_FBClients.ClientID = GIBS_FBClientsVisits.ClientID
	WHERE     (GIBS_FBClientsVisits.VisitDate between  CONVERT(DATETIME, @StartDate, 102) AND CONVERT(DATETIME, @EndDate, 102))
	AND GIBS_FBClients.PortalID = @PortalID
    AND GIBS_FBClientsVisits.VisitNumBags > 0 
	and  (@ServiceLocation is null or GIBS_FBClientsVisits.ServiceLocation=@ServiceLocation)

	Select sum(cCount) AS THH_Served from #reportTable


end
GO


